{"version":3,"file":"static/js/305.5ad18cf7.chunk.js","mappings":"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","sources":["api/MoviesService.js","webpack://goit-react-hw-05-movies/./src/components/ErrorComp/ErrorComp.module.css?52fe","components/ErrorComp/ErrorComp.jsx","hooks/useFetching.js","webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\"\n\nexport class MoviesService {\n\n    static BASE_URL = \"https://api.themoviedb.org/3\"\n    static OPTIONS = {\n        headers: {\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZDE3MTA1ZTU5M2ZiMDI4NmI1OTg1OWRkZWRlOWNhMyIsInN1YiI6IjY1NWI0MjU3ZjY3ODdhMDBjNmNlZTEwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.S8IgppWVE1ouikuk0fV5PZzs0a_uf8nC7c6XXjA5guU'\n        }\n    }\n\n    static async getTrandingMovies() {\n        const response = await axios\n            .get(MoviesService.BASE_URL + '/trending/all/day?language=en-US', MoviesService.OPTIONS)\n        return response.data;\n    }\n\n    static async getMoviesByQuery(searchText) {\n        const response = await axios\n            .get(MoviesService.BASE_URL + '/search/movie?query=' + searchText + '&include_adult=false&language=en-US&page=1', MoviesService.OPTIONS)\n        return response.data;\n    }\n\n    static async getMovieDetailsById(id) {\n        const response = await axios\n            .get(MoviesService.BASE_URL + '/movie/' + id + '?language=en-US', MoviesService.OPTIONS)\n        return response.data;\n    }\n\n    static async getMovieCastById(id) {\n        const response = await axios\n            .get(MoviesService.BASE_URL + '/movie/' + id + '/credits?language=en-US', MoviesService.OPTIONS)\n        return response.data;\n    }\n\n    static async getMovieReviewsById(id) {\n        const response = await axios\n            .get(MoviesService.BASE_URL + '/movie/' + id + '/reviews?language=en-US&page=1', MoviesService.OPTIONS)\n        return response.data;\n    }\n}","// extracted by mini-css-extract-plugin\nexport default {\"errorText\":\"ErrorComp_errorText__dt8qk\"};","import classes from './ErrorComp.module.css'\n\nconst ErrorComp = ({message}) => {\n    \n    return (\n        <p className={classes.errorText}>{message}</p>\n    )\n}\n\nexport default ErrorComp;","import { useState } from \"react\"\n\nexport const useFetching = (callback) => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState('')\n\n    const fetching = async (...args) => {\n        try {\n            setIsLoading(true);\n            await callback(...args)\n        } catch(e) {\n            setError(e.message)\n        } finally {\n            setIsLoading(false)\n        }\n    }\n    \n    return [fetching, isLoading, error]\n}","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__hbalY\",\"actorItem\":\"Cast_actorItem__RpdR9\",\"actorImg\":\"Cast_actorImg__YIxqD\",\"actorName\":\"Cast_actorName__JhfgR\",\"actorCharacter\":\"Cast_actorCharacter__HJVlq\"};","import { useEffect, useState } from 'react';\nimport classes from './Cast.module.css'\nimport { useFetching } from 'hooks/useFetching';\nimport { useParams } from 'react-router-dom';\nimport { MoviesService } from 'api/MoviesService';\nimport person from '../../img/person.png';\nimport LoaderComp from 'components/LoaderComp/LoaderComp';\nimport ErrorComp from 'components/ErrorComp/ErrorComp';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([])\n    const {movieId} = useParams()\n    const [fetchCast, isLoading, error] = useFetching(async () => {\n        const data = await MoviesService.getMovieCastById(movieId)\n        setCast(data.cast)\n    })\n\n    useEffect(() => {\n        fetchCast()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div>\n            {\n                isLoading\n                ?\n                <LoaderComp/>\n                :\n                error\n                    ?\n                    <ErrorComp message={error}/>\n                    :\n                    <ul className={classes.castList}>\n                        {\n                            cast.map(({cast_id, profile_path, name, character}) => \n                                <li key={cast_id} className={classes.actorItem}>\n                                    <img \n                                        src={profile_path \n                                            ? 'https://image.tmdb.org/t/p/original' + profile_path \n                                            : person} \n                                        alt={name}\n                                        className={classes.actorImg}\n                                    />\n                                    <p className={classes.actorName}>{name}</p>\n                                    <p className={classes.actorCharacter}>Role: {character ? character : 'no info'}</p>\n                                </li>    \n                            )\n                        }\n                    </ul>\n            }\n        </div>\n    )\n}\n\nexport default Cast;"],"names":["MoviesService","_classCallCheck","_createClass","key","value","_getTrandingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","BASE_URL","OPTIONS","sent","abrupt","data","stop","apply","arguments","_getMoviesByQuery","_callee2","searchText","_context2","_x","_getMovieDetailsById","_callee3","id","_context3","_x2","_getMovieCastById","_callee4","_context4","_x3","_getMovieReviewsById","_callee5","_context5","_x4","headers","Authorization","_ref","message","_jsx","className","classes","children","useFetching","callback","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","fetching","_args","t0","finish","cast","setCast","movieId","useParams","_useFetching","_useFetching2","fetchCast","useEffect","LoaderComp","ErrorComp","map","_ref2","cast_id","profile_path","name","character","_jsxs","src","alt"],"sourceRoot":""}